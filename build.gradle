buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.2.14"
  }
}

allprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  apply plugin: 'org.jetbrains.intellij'
  intellij.version = 2017.1
}

repositories {
  mavenCentral()
}

apply plugin: 'idea'

dependencies {
  runtime 'com.google.code.gson:gson:2.8.5'
  compile project(':MetricsReloaded')
  compile project(':core')
  compile project(':features-extraction')
  compile project(':refactorings-generation')
  compile project(':algorithms-evaluation')
  compile files('lib/args4j-2.32.jar', 'lib/jcommon-0.9.1.jar', 'lib/jfreechart-0.9.16.jar')
}

task runRefactoringsGeneration(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
  if (graph.hasTask(runRefactoringsGeneration)) {
    runIde.args 'refactorings-generation', "$pathToProject", "$pathToOutput"
    runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx2048m'
  }
}

task runFeaturesExtraction(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
  if (graph.hasTask(runFeaturesExtraction)) {
    runIde.args 'features-extraction', "$pathToProject", "$pathToRefactorings", "$pathToFeatures"
    runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx2048m'
  }
}

task runReformatRefactorings(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
  if (graph.hasTask(runReformatRefactorings)) {
    runIde.args 'reformat-refactorings', "$pathToProject", "$pathIn", "$inFormatName", "$pathOut", "$outFormatName"
    runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx2048m'
  }
}

task runAlgorithmsEvaluation(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
  if (graph.hasTask(runAlgorithmsEvaluation)) {
    runIde.args 'algorithms-evaluation', "$pathToDataset", "$algorithmsNames", "$pathToSaveResults"
    runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx4096m'
  }
}